/*
Deployment script for Tracker_Core

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Tracker_Core"
:setvar DefaultFilePrefix "Tracker_Core"
:setvar DefaultDataPath "C:\Users\eliskn\AppData\Local\Microsoft\VisualStudio\SSDT\Server"
:setvar DefaultLogPath "C:\Users\eliskn\AppData\Local\Microsoft\VisualStudio\SSDT\Server"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key b2bf2140-297d-4a8d-a3f8-421d50cacb0d is skipped, element [dbo].[UserInfo].[Id] (SqlSimpleColumn) will not be renamed to UserId';


GO
PRINT N'Creating [dbo].[UserInfo]...';


GO
CREATE TABLE [dbo].[UserInfo] (
    [UserId]    INT           NOT NULL,
    [FirstName] NVARCHAR (50) NULL,
    [LastName]  NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [UserName]     NVARCHAR (50) NOT NULL,
    [UserPassword] NVARCHAR (50) NOT NULL,
    [UserRights]   BINARY (50)   NOT NULL,
    [LastLogin]    TIMESTAMP     NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_UserInfo_Users]...';


GO
ALTER TABLE [dbo].[UserInfo] WITH NOCHECK
    ADD CONSTRAINT [FK_UserInfo_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b2bf2140-297d-4a8d-a3f8-421d50cacb0d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b2bf2140-297d-4a8d-a3f8-421d50cacb0d')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[UserInfo] WITH CHECK CHECK CONSTRAINT [FK_UserInfo_Users];


GO
PRINT N'Update complete.';


GO
